# frozen_string_literal: true

require "erb"
require "bundler/gem_tasks"
require "rake/clean"

CLEAN << "docs" << "pkg"

task :default => %i[msh build install spec]

desc "build everything and run msh"
task :run => :msh do
  sh "bundle exec ruby exe/msh"
end

desc "build everything"
task :msh => :man

desc "generates readme.md from ERB"
task :readme => [:msh, "readme.md"]

file "readme.md" do |t|
  template = File.read "#{t.name}.erb"
  puts "#{t.name}.erb -> #{t.name}"
  # trim mode of `<>` removes newlines and blank lines
  erb_string = ERB.new(template, nil, :trim_mode => "-").result
  File.open(t.name, "w") { |f| f.puts erb_string }
end

Dir["lib/tasks/*.rake"].each(&method(:load))

BUILD_CONFIG = <<~RB
  MRuby::Build.new do |conf|
    toolchain :gcc

    conf.gembox 'default'

    conf.gem '../..'

    # bintest
    # conf.enable_bintest
  end
RB

STUB = <<~RB
  #include <stdlib.h>
  #include <stdio.h>

  #include <mruby.h>
  #include <mruby/array.h>

  // Based/copied from https://github.com/hone/mruby-cli/blob/80af213286d63bb18ced44018cdd80388c1f376b/tools/mruby-cli/mruby-cli.c
  int main(int argc, char *argv[])
  {
    mrb_state *mrb = mrb_open();
    mrb_value ARGV = mrb_ary_new_capa(mrb, argc);
    int i;
    int return_value;

    for (i = 0; i < argc; i++) {
      mrb_ary_push(mrb, ARGV, mrb_str_new_cstr(mrb, argv[i]));
    }
    mrb_define_global_const(mrb, "ARGV", ARGV);

    // call __main__(ARGV)
    mrb_funcall(mrb, mrb_top_self(mrb), "__main__", 1, ARGV);

    return_value = EXIT_SUCCESS;

    if (mrb->exc) {
      mrb_print_error(mrb);
      return_value = EXIT_FAILURE;
    }
    mrb_close(mrb);

    return return_value;
  }
RB

def make_file name, source
  File.open(name, "w") { |f| f.puts source }
end

task :mruby do
  Dir.chdir "third_party/mruby" do
    sh "git checkout -- ."
    make_file "build_config.rb", BUILD_CONFIG
    sh "make"
    sh "cp -v bin/msh ../../exe/"
  end

  # sh "third_party/mruby/bin/mrbc -Bmsh mrblib/msh.rb"
  # sh "gcc -std=c99 -Ithird_party/mruby/include tools/msh/msh.c -o msh third_party/mruby/build/host/lib/libmruby.a -lm -ldl"
end
