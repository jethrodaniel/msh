'\" t
.\"     Title: msh
.\"    Author: [see the "AUTHOR(S)" section]
.\" Generator: Asciidoctor 2.0.10
.\"      Date: 2020-06-26
.\"    Manual: Msh Manual
.\"    Source: Msh v0.2.0
.\"  Language: English
.\"
.TH "MSH" "1" "2020-06-26" "Msh v0.2.0" "Msh Manual"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
msh \- a ruby shell
.SH "SYNOPSIS"
.sp
\fBmsh\fP [\fIoptions\fP]... [\fIfile\fP]...
.SH "DESCRIPTION"
.sp
Msh is a shell that shares Ruby\(cqs goal
.RS 3
.ll -.6i
.sp
For me the purpose of life is partly to have joy. Programmers often feel
joy when they can concentrate on the creative side of programming, So Ruby
is designed to make programmers happy.
.br
.RE
.ll
.RS 5
.ll -.10i
\(em Yukihiro Matsumoto
.RE
.ll
.sp
It supports a subset of \f(CRsh\fP/\f(CRbash\fP
.sp
.if n .RS 4
.nf
       feature                       example
_____________________________________________________
 ðŸ—¸  | redirect output             | a > b
 ðŸ—¸  | append output               | a >> b
 ðŸ—¸  | redirect input              | a < b
    | redirect to file descriptor | a 2>&1
 ðŸ—¸  | conditionals                | a || b && c
 ðŸ—¸  | commands                    | a; b;
    | grouping                    | a; {b || c}
    | subshells                   | (a)
 ðŸ—¸  | pipes                       | a | b
    | command substitution        | $(a \(aqb\(aq c)
    | process substitution        | <(a | b)
    | local variables             | a = 2; echo $a
 ðŸ—¸  | environment variables       | a=b a b
    | aliases                     | alias g = \(aqgit\(aq
 ðŸ—¸  | functions                   | repl "def foo; puts :bar; end"; foo
.fi
.if n .RE
.sp
It allows for interpolation in any words
.sp
.if n .RS 4
.nf
$ echo Ï€ â‰ˆ #{Math::PI} | cowsay
 _________________________
< Ï€ â‰ˆ 3.141592653589793 . >
 \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
        \(rs   ^__^
         \(rs  (oo)\(rs_______
            (__)\(rs       )\(rs/\(rs
                ||\-\-\-\-w |
                ||     ||
.fi
.if n .RE
.sp
The underlying REPL is available via the \f(CRrepl\fP builtin. It\(cqs the same
context as used during interpolation.
.sp
.if n .RS 4
.nf
$ repl
enter some ruby (sorry, no multiline)
> def foo; "bar"; end
=> :foo
> ^D
$ echo foo#{foo}
foo bar
$ echo #{self}
<Msh::Context:0x0000557a7f0b6f68>
.fi
.if n .RE
.sp
Functions are just method calls on that same REPL context.
.SH "EXAMPLES"
.sp
Filter commands
.sp
.if n .RS 4
.nf
$ repl
enter some ruby (sorry, no multiline)
> def upcase; ARGF.each_line.map(&:upcase).each { |l| puts l }; end
=> :upcase
> ^D
$ echo hi | upcase
HI
.fi
.if n .RE
.sp
Changing the prompt
.sp
.if n .RS 4
.nf
$ repl
enter some ruby (sorry, no multiline)
> def prompt; "% "; end
=> "% "
> ^D
%
.fi
.if n .RE
.SS "todo"
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
source
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
config file
.RE
.sp
.if n .RS 4
.nf
$ source file.msh
.fi
.if n .RE
.SH "OPTIONS"
.sp
\fB\-h, \-\-help\fP
.RS 4
Show usage information.
.RE
.sp
\fB\-V, \-\-version\fP
.RS 4
Show the version.
.RE
.sp
\fB\-\-copyright, \-\-license\fP
.RS 4
Show the copyright.
.RE
.sp
\fB\-c <command>\fP
.RS 4
Run a command string as input.
.RE
.SH "COPYING"
.sp
Copyright (C) 2020 Mark Delk.
Free use of this software is granted under the terms of the MIT License.
.SH "RESOURCES"
.sp
\fBissue tracker\fP
.RS 4
.URL "https://github.com/jethrodaniel/msh/issues?q=is%3Aopen" "" "."
.RE
.sp
\fBsource code\fP
.RS 4
.URL "https://github.com/jethrodaniel/msh" "" ""
.RE
.SH "MSH"
.sp
Part of msh(1).